/*
 * Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

package org.opensolaris.os.dtrace;

import java.util.EventObject;

/**
 * Notification that DTrace has dropped data due to inadequate buffer
 * space.
 *
 * @see ConsumerListener#dataDropped(DropEvent e)
 *
 * @author Tom Erickson
 */
public class DropEvent extends EventObject {
    static final long serialVersionUID = 5454623535426339134L;

    /**
     * Creates a {@link ConsumerListener#dataDropped(DropEvent e)
     * dataDropped()} event that reports dropped data.
     *
     * @throws NullPointerException if the given drop is {@code null}
     */
    public
    DropEvent(Object source, Drop dataDrop)
    {
	super(source);
    }

    /**
     * Gets the drop information generated by DTrace.
     *
     * @return non-null drop information generated by DTrace
     */
    public Drop
    getDrop()
    {
	return null;
    }

}